@use "../utils/variables" as *;

%container {
	padding: $container-padding;
	margin-left: auto;
	margin-right: auto;
	width: 100%;

	@each $breakpoint in $container-breakpoints {
		@if not map-has-key($map: $container-grid-breakpoints, $key: #{$breakpoint}) {
			@debug "container-grid-breakpoints does not have an entry for #{$breakpoint}, skipping";
		} @else if not map-has-key($map: $container-max-widths, $key: #{$breakpoint}) {
			@warn "container-max-widths does not have an entry for #{$breakpoint}, cannot create a media rule for this breakpoint";
		} @else {
			$grid-breakpoint: map-get($container-grid-breakpoints, #{$breakpoint});
			$max-width: map-get($container-max-widths, #{$breakpoint});

			@media (min-width: $grid-breakpoint) {
				max-width: $max-width;
			}
		}
	}
}

@mixin make-container($padding: $container-padding, $breakpoints: $container-breakpoints, $grid-breakpoints: $container-grid-breakpoints, $max-widths: $container-max-widths) {
	padding: $padding;
	margin-left: auto;
	margin-right: auto;
	width: 100%;

	@each $breakpoint in $breakpoints {
		@if not map-has-key($map: $grid-breakpoints, $key: #{$breakpoint}) {
			@debug "container-grid-breakpoints does not have an entry for #{$breakpoint}, skipping";
		} @else if not map-has-key($map: $max-widths, $key: #{$breakpoint}) {
			@warn "container-max-widths does not have an entry for #{$breakpoint}, cannot create a media rule for this breakpoint";
		} @else {
			$grid-breakpoint: map-get($grid-breakpoints, #{$breakpoint});
			$max-width: map-get($max-widths, #{$breakpoint});

			@media (min-width: $grid-breakpoint) {
				max-width: $max-width;
			}
		}
	}
}