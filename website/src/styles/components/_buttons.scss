@use 'sass:meta';
@use '../functions';
@use '../variables';

%button {
    --btn-border-width: #{variables.$button-border-width};

    padding: variables.$button-padding;
    background-color: var(--btn-background-color);
    color: var(--btn-color);
    border: var(--btn-border-width) solid var(--btn-border-color);
    cursor: pointer;
    outline: none;

    &:active {
        background-color: var(--btn-background-color-active);
        border-color: var(--btn-border-color-active);
        color: var(--btn-color-active);
    }

    &:disabled {
        cursor: default;
        pointer-events: none;
        opacity: 0.65;
    }

    &:focus-visible {
        box-shadow: 0 0 0.75rem 0 var(--btn-border-color);
    }

    &:hover {
        background-color: var(--btn-background-color-hover);
        border-color: var(--btn-border-color-hover);
        color: var(--btn-color-hover);
    }
}

// Based heavily on Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_buttons.scss
%btn-large {
    font-size: variables.$font-size-lg;
    padding: 0.5rem 1rem;
}

%btn-small {
    font-size: variables.$font-size-sm;
    padding: 0.25rem 0.5rem;
}

@mixin buttons($font-size: variables.$button-font-size) {
    @include button-base($font-size: $font-size);
    @include themed-buttons;
    @include themed-buttons-inverted;
}

@mixin button-base($font-size: variables.$button-font-size) {
    button {
        @extend %button;
        font-size: $font-size;
    }
}

// Based heavily on Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/mixins/_buttons.scss
// This has been turned into an opt-in mixin, instead of always including the classes in the compiled css
@mixin themed-buttons($color-map: variables.$theme-colors, $font-color: variables.$white) {
    @each $name, $colors in $color-map {
        .btn-#{$name} {
            @include themed-button($theme-colors: $colors);
        }
    }
}

@mixin themed-buttons-inverted($color-map: variables.$theme-colors, $font-color: variables.$white) {
    @each $name, $colors in $color-map {
        .btn-#{$name}-inverted {
            @include themed-button-inverted($theme-colors: $colors);
        }
    }
}

@mixin themed-button(
    $theme-colors,
    $background-scale: variables.$button-background-scale,
    $background-scale-hover: variables.$button-background-scale-hover,
    $background-scale-active: variables.$button-background-scale-active,
    $background-scale-disabled: variables.$button-background-scale-disabled
) {
    --btn-color: #{map-get($theme-colors, 'color')};
    --btn-background-color: #{functions.shift-color(map-get($theme-colors, 'background-color'), $background-scale)};
    --btn-background-color-active: #{functions.shift-color(
            map-get($theme-colors, 'background-color'),
            $background-scale-active
        )};
    --btn-background-color-hover: #{functions.shift-color(
            map-get($theme-colors, 'background-color'),
            $background-scale-hover
        )};
    //--btn-border-color: ${variables.$dark};

    // &:disabled {
    //     background-color: #{functions.shift-color($theme-color, $background-scale-disabled)};
    // }

    // &:focus-visible {
    //     box-shadow: 0 0 0.5rem 0 variables.$dark;
    // }

    // &:focus-visible,
    // &:hover:not([disabled]) {
    //     outline: none;
    //     background-color: #{functions.shift-color($theme-color, $background-scale-hover)};
    // }

    // &:active:not([disabled]) {
    //     background-color: #{functions.shift-color($theme-color, $background-scale-active)};
    // }
}

// Based loosely on Bootstrap's button-outline-variant: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/mixins/_buttons.scss
// Except this version only includes a border for the :focus-visible state
@mixin themed-button-inverted($theme-colors) {
    color: map-get($theme-colors, 'color');
    border-color: map-get($theme-colors, 'color');

    &:active,
    &:hover,
    &:focus-visible {
        background-color: map-get($theme-colors, 'color');
        color: initial;
        border-color: initial;
    }
}
